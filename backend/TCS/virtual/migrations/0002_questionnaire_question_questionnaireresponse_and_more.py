# Generated by Django 5.1 on 2025-10-20 19:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('recruiters', '0005_remove_recruiter_bio_alter_recruiter_title'),
        ('virtual', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titre du questionnaire', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description du questionnaire', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Questionnaire actif')),
                ('is_required', models.BooleanField(default=True, help_text='Questionnaire obligatoire')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('offer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaire', to='recruiters.offer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='Texte de la question')),
                ('question_type', models.CharField(choices=[('text', 'Texte libre'), ('textarea', 'Texte long'), ('select', 'Liste déroulante'), ('radio', 'Choix unique'), ('checkbox', 'Choix multiples'), ('number', 'Nombre'), ('email', 'Email'), ('phone', 'Téléphone'), ('date', 'Date'), ('file', 'Fichier')], help_text='Type de question', max_length=20)),
                ('is_required', models.BooleanField(default=True, help_text='Question obligatoire')),
                ('order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage")),
                ('options', models.JSONField(blank=True, help_text='Options pour les questions à choix', null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, help_text='Longueur minimale', null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, help_text='Longueur maximale', null=True)),
                ('min_value', models.FloatField(blank=True, help_text='Valeur minimale', null=True)),
                ('max_value', models.FloatField(blank=True, help_text='Valeur maximale', null=True)),
                ('allowed_file_types', models.JSONField(blank=True, help_text='Types de fichiers autorisés', null=True)),
                ('max_file_size', models.PositiveIntegerField(blank=True, help_text='Taille maximale en MB', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='virtual.questionnaire')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False, help_text='Questionnaire complété')),
                ('submitted_at', models.DateTimeField(blank=True, help_text='Date de soumission', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaire_responses', to=settings.AUTH_USER_MODEL)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaire_responses', to='recruiters.offer')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='virtual.questionnaire')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('questionnaire', 'candidate')},
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, help_text='Réponse textuelle', null=True)),
                ('answer_number', models.FloatField(blank=True, help_text='Réponse numérique', null=True)),
                ('answer_choices', models.JSONField(blank=True, help_text='Choix sélectionnés', null=True)),
                ('answer_file', models.FileField(blank=True, help_text='Fichier uploadé', null=True, upload_to='questionnaire_files/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='virtual.question')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='virtual.questionnaireresponse')),
            ],
            options={
                'ordering': ['question__order'],
                'unique_together': {('response', 'question')},
            },
        ),
    ]
